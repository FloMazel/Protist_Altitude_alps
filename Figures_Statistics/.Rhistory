###############################
#   Protists communities      #
###############################
##  Load data and code   ##
###########################
rm(list=ls())
#Load code
library(tidyverse)
library(phyloseq)
library(vegan)
library(cowplot)
library(RColorBrewer)
source("Scripts/news_ASVs/0_Functions.R")
#define plot features
MyTheme=theme_classic() +theme(plot.title.position = "plot",
plot.title = element_text(size=16),
axis.text=element_text(size=14),
axis.text.x =element_text(size=14,angle=45,hjust=1),
axis.title=element_text(size=14),
legend.text=element_text(size=12),
panel.border = element_blank(),
axis.ticks = element_line(size = 1),
axis.ticks.length = unit(.2, "cm"))
cols=c('Phototrophic'='chartreuse4','Parasite'="#DB2B2B",'Consumer'='chocolate4','Unknown'='grey')
cols=c('Phototrophic'="#FFD92F",'Parasite'="#1F78B4",'Consumer'="#A6761D",'Unknown'='grey')
minAb=0
alliance_display = expand_grid(color=brewer.pal(n = 5, name="Set1"),shape=c(15,17,18,25,8))[1:19,]
# load data
protists_taxonomy <- read_csv("Data/Final/Protists_taxonomy_functions.csv") %>%
mutate(Functions=ifelse(is.na(Functions),'Unknown',Functions))
pooled_OTU_table = as.matrix(read.table("Data/Final/Pooled_Protists_ASVs_counts.txt",check.names = F))
pooled_metadata = read_csv("Data/Final/Pooled_metadata.csv") %>%
mutate(plotID=as.character(plotID))
# Create phyloseq object
# ------------------------
MT <- as.data.frame(pooled_metadata); rownames(MT)=MT$plotID
PT <- as.matrix(protists_taxonomy); rownames(PT)=PT[,'seqs']
FCT <- as.matrix(protists_taxonomy); rownames(FCT)=FCT[,'seqs']; FCT <- FCT[,c("Functions",'PR2_Class')]
protist_PS_FCT=phyloseq(tax_table(FCT),otu_table(pooled_OTU_table,taxa_are_rows=T),sample_data(MT))
FCT_PS <-  protist_PS_FCT %>%
tax_glom(taxrank = 'Functions' ,NArm=F) %>%                     # agglomerate at phylum level
transform_sample_counts(function(x) {x/sum(x)} ) %>% # Transform to rel. abundance
psmelt() %>%
mutate(Functions=factor(Functions,levels = c("Unknown","Phototrophic","Parasite","Consumer")))
# Basic stats
# ---------
alt_bin = FCT_PS %>%
mutate(altitude_bin1=cut_width(altitude, width=1000, boundary=0)) %>%
group_by(altitude_bin1,Functions) %>%
summarise(mean_ab=mean(Abundance))
# Figure 3
# ---------
altitude_plot <- FCT_PS %>%  filter(Abundance > minAb) %>%
ggplot(aes(y=Abundance,x=altitude/1000,color=Functions))+geom_point(alpha=.2)+
geom_smooth(method = "loess", fill = NA) + MyTheme + scale_color_manual(values=cols) +
ggtitle("A")+ theme(legend.position="none") +
xlab("Altitude (km)")+ylab("Relative read counts")
altitude_plot
waterC_plot <- FCT_PS %>%  filter(Abundance > minAb) %>%
ggplot(aes(y=Abundance,x=bulkSoilWaterContent,color=Functions))+geom_point(alpha=.2)+
scale_x_continuous(trans='log10') +
geom_smooth(method = "loess", fill = NA) +MyTheme +scale_color_manual(values=cols)+
ggtitle("B")+ theme(legend.position="none")+ylab("") +xlab("Soil water content (%)")
waterC_plot
pH_plot <- FCT_PS %>%  filter(Abundance > minAb) %>%
ggplot(aes(y=Abundance,x=pH,color=Functions))+geom_point(alpha=.2)+
geom_smooth(method = "loess", fill = NA) +MyTheme+scale_color_manual(values=cols)+
ggtitle("C")+ theme(legend.position="none")+ylab("Relative read counts")
pH_plot
alliance_fct_plot <- FCT_PS %>%  filter(!is.na(Alliance)) %>%
group_by(Alliance,Functions) %>%
summarise(Abundance=mean(Abundance),altitude=mean(altitude)) %>%
ggplot(aes(y=Abundance,x=fct_reorder2(Alliance,Functions, Abundance),fill=Functions))+#facet_wrap(~FUNCTIONS,ncol=1)+
geom_bar(stat = "identity") +scale_fill_manual(values=cols)+
MyTheme+theme(legend.box = "horizontal",axis.ticks.x = element_blank(),axis.line.x = element_blank(),axis.line.y = element_blank())+
guides(fill = guide_legend(nrow = 1,reverse = TRUE, keywidth = 1, keyheight = 1))+
xlab('Plant communities')+ ylab("")+ ggtitle("D")+
theme(legend.text=element_text(size=18),legend.title = element_blank())
alliance_fct_plot
legend <- cowplot::get_legend(alliance_fct_plot)
alliance_fct_plot <- alliance_fct_plot + theme(legend.position="none")
Upfct_env_plots <- plot_grid(altitude_plot,NULL,waterC_plot,
ncol=3, rel_widths=c(1,.1,1), align = "h")
lowfct_env_plots <- plot_grid(pH_plot,NULL,alliance_fct_plot,
ncol=3, rel_widths=c(1,.1,1))
fig3 <- plot_grid(Upfct_env_plots,NULL,lowfct_env_plots,NULL, legend,
ncol=1,rel_heights=c(1,0.1,1,.05,.2))
